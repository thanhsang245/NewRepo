#include<iostream>
using namespace std;
struct NODE
{
	NODE* next;
	int data;
};
typedef NODE* node;
struct stack
{
	node top;
};
void khoitao(stack& ds)
{
	ds.top = NULL;
}
int isEmpty(stack ds)
{
	return (ds.top == NULL ? 1 : 0);
}
node taoNode(int x)
{
	node p;
	p = new NODE;
	p->data = x;
	p->next = NULL;
	return p;
}
void push(stack& ds, int x)
{
	node p = taoNode(x);
	if (isEmpty(ds))
		ds.top = p;
	else
	{
		p->next = ds.top;
		ds.top = p;
	}
}
void nhapStack(stack& ds)
{
	int x;
	khoitao(ds);
	while (1)
	{
		cout << "\nNhap x khac -99: "; cin >> x;
		if (x == -99)
			break;
		push(ds, x);
	}
}
void xuatStack(stack ds)
{
	node p = ds.top;
	while (p != NULL)
	{
		cout << p->data << " ";
		p = p->next;
	}
}
int pop(stack& ds)
{
	if (isEmpty(ds))
		return 0;
	node p = ds.top;
	int a = p->data;
	ds.top = p->next;
	delete p;
	return a;
}
int top(stack ds)
{
	if (isEmpty(ds))
		return 0;
	return ds.top->data;
}
void xuatViTri(stack ds, int x)
{
	bool flag = false;
	int i = 0;
	if (!isEmpty(ds))
	{
		for (node p = ds.top; p != NULL; p = p->next)
		{
			if (p->data == x)
			{
				flag = true;
				cout << i << " ";
			}
			i++;
		}
	}
	if (flag == false)
		cout << "\nDanh sach khong co gia tri x.";
}

int demX(stack ds, int x)
{
	int dem = 0;
	for (node p = ds.top; p != NULL; p = p->next)
	{
		if (p->data == x)
			dem++;
	}
	return dem;
}
void xoaALL(stack& ds, int x)
{
	int t;
	stack a;
	khoitao(a);
	while (!isEmpty(ds))
	{

		t = pop(ds);
		if (t != x)
			push(a, t);
	}
	while (!isEmpty(a))
	{
		t = pop(a);
		push(ds, t);
	}
}
void xoaDau(stack& ds,int x)
{
	int t;
	stack a;
	khoitao(a);
	bool flag = false;
	while (!isEmpty(ds))
	{
		int t = pop(ds);
		if (t == x)
			flag = true;
		else
			push(a, t);
		if (flag == true)
			break;
	}
	while (!isEmpty(a))
	{
		t = pop(a);
		push(ds, t);
	}
}
int main()
{
	stack a;
	int x;
	nhapStack(a);
	cout << "\nDanh sach stack sau khi nhap la: ";
	xuatStack(a);
	cout << "\nNhap gia tri x can tim: "; cin >> x;
	cout << "\nVi Tri x: ";
	xuatViTri(a, x);
	cout << "\nNhap gia tri x can dem: "; cin >> x;
	cout <<"\nSo phan tu X trong danh sach la: "<<demX(a, x);
	cout << "\nPhan tu dau tien trong stack: " << pop(a);
	cout << "\nNhap x de xoa tat ca cac gia tri bang x: "; cin >> x;
	xoaALL(a, x);
	cout << "\nDanh sach sau khi xoa all x: ";
	xuatStack(a);
	cout << "\nNhap x de xoa tat ca cac gia tri bang x: "; cin >> x;
	xoaDau(a, x);
	cout << "\nDanh sach sau khi xoa x dau: ";
	xuatStack(a);
	return 0;
}
